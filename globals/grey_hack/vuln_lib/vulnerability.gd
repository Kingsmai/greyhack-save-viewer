## 表示单个漏洞记录
class_name Vulnerability extends Resource

var type_vulner: int
var required_actions: Array[int] = []
var helper_hack_result: HelperHackResult
var unsec_value: String
var details: String
var req_lib_version: String = ""  # 可为 null，Godot 会处理空字符串
var is_remote: bool
var required_lib: int
var metaxploit_version: LibVersion

static func from_dict(dict: Dictionary) -> Vulnerability:
	var v = Vulnerability.new()
	v.type_vulner = dict.get("typeVulner", 0)
	for required_action in dict.get("requiredActions", []):
		v.required_actions.append(int(required_action)) 
	v.helper_hack_result = HelperHackResult.from_dict(dict.get("helperHackResult", {}))
	v.unsec_value = dict.get("unsecValue", "")
	v.details = dict.get("details", "")
	var req_lib_ver = dict.get("reqLibVersion", "")
	v.req_lib_version = "" if req_lib_ver == null else req_lib_ver
	v.is_remote = dict.get("isRemote", false)
	v.required_lib = dict.get("requiredLib", 0)
	v.metaxploit_version = LibVersion.from_dict(dict.get("metaxploitVersion", {}))
	return v
